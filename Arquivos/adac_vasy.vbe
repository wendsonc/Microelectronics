--
-- Generated by VASY
--
ENTITY adac_vasy IS
PORT(
  a	: IN BIT_VECTOR(3 DOWNTO 0);
  sel0	: IN BIT;
  sel1	: IN BIT;
  clk	: IN BIT;
  s	: OUT BIT_VECTOR(3 DOWNTO 0);
  c_4	: OUT BIT;
  vdd	: IN BIT;
  vss	: IN BIT
);
END adac_vasy;

ARCHITECTURE VBE OF adac_vasy IS

  SIGNAL rtlsum_2	: BIT_VECTOR(4 DOWNTO 0);
  SIGNAL rtlcarry_2	: BIT_VECTOR(4 DOWNTO 0);
  SIGNAL rtlatom_1	: BIT_VECTOR(4 DOWNTO 0);
  SIGNAL rtlsum_0	: BIT_VECTOR(4 DOWNTO 0);
  SIGNAL rtlcarry_0	: BIT_VECTOR(4 DOWNTO 0);
  SIGNAL rtlexts_2	: BIT_VECTOR(4 DOWNTO 0);
  SIGNAL rtlexts_1	: BIT_VECTOR(4 DOWNTO 0);
  SIGNAL rtlexts_0	: BIT_VECTOR(4 DOWNTO 0);
  SIGNAL soma	: BIT_VECTOR(4 DOWNTO 0);
  SIGNAL inv	: BIT_VECTOR(3 DOWNTO 0);
  SIGNAL somador	: BIT_VECTOR(3 DOWNTO 0);
  SIGNAL mux0	: BIT_VECTOR(3 DOWNTO 0);
  SIGNAL mux1	: BIT_VECTOR(3 DOWNTO 0);
  SIGNAL acumulador	: REG_VECTOR(3 DOWNTO 0) REGISTER;
BEGIN

  rtlcarry_2(0) <= '0';
  rtlsum_2 <= ((rtlexts_0 XOR rtlexts_1) XOR rtlcarry_2);
  rtlcarry_2(4 downto 1) <= (((rtlexts_0(3 downto 0) AND rtlexts_1(3 downto 0)) OR (rtlexts_0(3 downto 0) 
AND rtlcarry_2(3 downto 0))) OR (rtlexts_1(3 downto 0) AND rtlcarry_2(3 downto 0))
);
  rtlcarry_0(0) <= '0';
  rtlsum_0 <= ((rtlatom_1 XOR rtlexts_2) XOR rtlcarry_0);
  rtlcarry_0(4 downto 1) <= (((rtlatom_1(3 downto 0) AND rtlexts_2(3 downto 0)) OR (rtlatom_1(3 downto 0) 
AND rtlcarry_0(3 downto 0))) OR (rtlexts_2(3 downto 0) AND rtlcarry_0(3 downto 0))
);
  rtlexts_2 <= ("0000" & sel0);
  rtlexts_1 <= ('0' & acumulador);
  rtlexts_0 <= ('0' & mux0);
  s <= mux1;
  mux1 <= somador WHEN (sel1 = '1') ELSE
     mux0;
  c_4 <= soma(4);
  somador <= soma(3 downto 0);
  soma <= rtlsum_0;
  rtlatom_1 <= rtlsum_2;
  mux0 <= a WHEN (sel0 = '0') ELSE
     inv;
  inv <= NOT(a);
  LABEL0 : BLOCK  ((clk = '1') AND NOT(clk'STABLE) )
  BEGIN
    acumulador <= GUARDED mux1;
  END BLOCK LABEL0;
END VBE;
